Creating a repository class for each entity type could result in a lot of redundant code,
and it could result in partial updates. For example, suppose you have to update two
different entity types as part of the same transaction. If each uses a separate database 
context instance, one might succeed and the other might fail. One way to minimize redundant 
code is to use a generic repository, and one way to ensure that all repositories use the same 
database context (and thus coordinate all updates) is to use a unit of work class.